/*!
 * type-safe v0.0.1 <https://github.com/machellerogden>
 * @license MIT
 * @copyright 2015 Mac Heller-Ogden <http://www.machellerogden.com/>
 * @author Mac Heller-Ogden
 * @summary yet another predicate and assertion utility for type safety
 */
!function(t,e){"undefined"!=typeof module&&module.exports?module.exports=e():"function"==typeof define&&"object"==typeof define.amd?define(e):(function(){return this||(0,eval)("this")}())[t]=e()}("typeSafe",function(){function t(t){this.name="TypeError",this.message=t}function e(e,n){throw new t("Expected `"+e+"` and instead received `"+n+"`")}function n(t,n){var r=null!=t?!0:!1;return!r&&n&&e("existy",typeof t),r}function r(t,r){var o=t!==!1&&n(t)?!0:!1;return!o&&r&&e("truthy",typeof t),o}function o(t){return function(n,r){var o=typeof n,i=!1,s=!1,u=!0;return"object"===o&&((i=null===n)||(s="[object Array]"===Object.prototype.toString.call(n))),"nan"===t?"number"===o&&isNaN(n)||(u=!1):"number"===t?(isNaN(n)||o!==t)&&(u=!1):"null"===t?i||(u=!1):"array"===t?s||(u=!1):"object"===t&&(s||i)?u=!1:o!==t&&(u=!1),!u&&r&&e(t,o),u}}function i(t){return function(e){return t(e,!0)}}var s,u,a,f,c,y,l,p,d,b,h,m,N,j,x,v,g,w,E,O;return t.prototype=Error.prototype,s=o("nan"),u=o("null"),a=o("undefined"),f=o("string"),c=o("function"),y=o("object"),l=o("array"),p=o("number"),d=o("boolean"),b=i(n),h=i(r),m=i(s),N=i(u),j=i(a),x=i(f),v=i(c),g=i(y),w=i(l),E=i(p),O=i(d),{isExisty:n,isTruthy:r,isNan:s,isNull:u,isUndefined:a,isString:f,isFunction:c,isObject:y,isArray:l,isNumber:p,isBoolean:d,assertExisty:b,assertTruthy:h,assertNan:m,assertNull:N,assertUndefined:j,assertString:x,assertFunction:v,assertObject:g,assertArray:w,assertNumber:E,assertBoolean:O,"export":function(t){t="object"==typeof t?t:window;for(var e in this)this.hasOwnProperty(e)&&"export"!==e&&null==t[e]&&(t[e]=this[e])}}});